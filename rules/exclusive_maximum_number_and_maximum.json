{
  "title": "Keep only the tighter lower bound (`exclusiveMinimum` vs `minimum`)",
  "description": "If both `minimum` and numeric `exclusiveMinimum` coexist, remove the weaker bound.",
  "examples": [
    {
      "after": {
        "type": "number",
        "exclusiveMinimum": 10
      },
      "before": {
        "type": "number",
        "exclusiveMinimum": 10,
        "minimum": 8
      },
      "doc": true
    }
  ],
  "comprehensiveExamples": [
    {
      "title": "Wrong: Keep only the stricter upper bound",
      "description": "When both maximum and exclusiveMaximum exist, one is redundant. Retain the stricter constraint.",
      "before": { "type": "number", "exclusiveMaximum": 5, "maximum": 6 },
      "after": { "type": "number", "exclusiveMaximum": 5 }
    },
    {
      "title": "Right: Single upper bound is clear",
      "description": "Having only exclusiveMaximum is fine and unambiguous.",
      "before": { "type": "number", "exclusiveMaximum": 10 },
      "after": { "type": "number", "exclusiveMaximum": 10 }
    }
  ],
  "autofixable": true,
  "categories": [ "correctness" ],
  "dialects": {
    "2019-09": [ "minimum", "exclusiveMinimum" ],
    "2020-12": [ "minimum", "exclusiveMinimum" ],
    "draft6": [ "minimum", "exclusiveMinimum" ],
    "draft7": [ "minimum", "exclusiveMinimum" ]
  },
  "message": "Drop the weaker lower-bound keyword; itâ€™s redundant.",
  "references": [
    "https://json-schema.org/draft/2019-09/json-schema-validation.html#name-exclusiveminimum"
  ]
}
