{
  "title": "`minContains` must not exceed `maxContains`",
  "description": "If both keywords are present, `minContains` must be ≤ `maxContains`; otherwise the array constraint is unsatisfiable.",
  "examples": [
    {
      "after": {
        "$schema": "https://json-schema.org/draft/2019-09/schema",
        "type": "array",
        "maxContains": 3,
        "minContains": 1,
        "contains": {
          "type": "string"
        }
      },
      "before": {
        "$schema": "https://json-schema.org/draft/2019-09/schema",
        "type": "array",
        "maxContains": 1,
        "minContains": 3,
        "contains": {
          "type": "string"
        }
      },
      "doc": true
    }
  ],
  "comprehensiveExamples": [
    {
      "title": "Wrong: minContains exceeds maxContains",
      "description": "Ensure minContains ≤ maxContains to avoid unsatisfiable schemas.",
      "before": { "type": "array", "contains": {"type":"string"}, "minContains": 3, "maxContains": 1 },
      "after": { "type": "array", "contains": {"type":"string"}, "minContains": 1, "maxContains": 3 }
    },
    {
      "title": "Right: Coherent contains bounds",
      "description": "Bounds that are consistent are valid.",
      "before": { "type": "array", "contains": {"type":"string"}, "minContains": 1, "maxContains": 3 },
      "after": { "type": "array", "contains": {"type":"string"}, "minContains": 1, "maxContains": 3 }
    }
  ],
  "autofixable": false,
  "categories": [ "correctness" ],
  "dialects": {
    "2019-09": [ "minContains", "maxContains" ],
    "2020-12": [ "minContains", "maxContains" ]
  },
  "message": "Adjust numeric bounds so `minContains` ≤ `maxContains`, or drop one keyword.",
  "references": [
    "https://json-schema.org/draft/2020-12/json-schema-validation.html#name-maxcontains"
  ]
}
