{
  "title": "Integer limits should stay within IEEE-754 safe range",
  "description": "Languages that use IEEE-754 doubles (e.g. JavaScript) can only represent integers accurately between −9 007 199 254 740 991 and +9 007 199 254 740 991. Declare `minimum`/`maximum` inside that range to avoid precision loss.",
  "examples": [
    {
      "after": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "integer",
        "maximum": 9007199254740991,
        "minimum": -9007199254740991
      },
      "before": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "integer",
        "maximum": 90071992547409980,
        "minimum": -90071992547409980
      },
      "doc": true
    }
  ],
  "autofixable": true,
  "categories": [ "safety", "readability" ],
  "comprehensiveExamples": [
    {
      "title": "Wrong: Integer bounds outside IEEE-754 safe range",
      "description": "Constrain to ±9007199254740991 to avoid precision loss in JavaScript environments.",
      "after": {
        "type": "integer",
        "maximum": 9007199254740991,
        "minimum": -9007199254740991
      },
      "before": {
        "type": "integer",
        "maximum": 90071992547409980,
        "minimum": -90071992547409980
      }
    },
    {
      "title": "Right: Inside safe range",
      "description": "Bounds within the safe range are fine.",
      "after": {
        "type": "integer",
        "maximum": 10,
        "minimum": -10
      },
      "before": {
        "type": "integer",
        "maximum": 10,
        "minimum": -10
      }
    }
  ],
  "dialects": {
    "2019-09": [ "type", "minimum", "maximum" ],
    "2020-12": [ "type", "minimum", "maximum" ],
    "draft4": [ "type", "minimum", "maximum" ],
    "draft6": [ "type", "minimum", "maximum" ],
    "draft7": [ "type", "minimum", "maximum" ]
  },
  "message": "Constrain integer limits to Number.MAX_SAFE_INTEGER bounds.",
  "references": [
    "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER"
  ]
}
