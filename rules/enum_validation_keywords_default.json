{
  "title": "Avoid combining enum with other validation keywords",
  "description": "`enum` fully defines allowed values; adding type/length/number constraints is redundant and can even contradict the enum.",
  "examples": [
    {
      "after": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "enum": [ "one", "two" ]
      },
      "before": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "string",
        "enum": [ "one", "two" ],
        "minLength": 3
      },
      "doc": true
    },
    {
      "after": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "enum": [ 1, 2, 3 ]
      },
      "before": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "enum": [ 1, 2, 3 ],
        "minimum": 0
      }
    },
    {
      "after": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "enum": [ 10, 5 ]
      },
      "before": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "integer",
        "enum": [ 10, 5 ],
        "maximum": 100,
        "multipleOf": 2
      }
    }
  ],
  "autofixable": true,
  "categories": [ "correctness", "readability" ],
  "comprehensiveExamples": [
    {
      "title": "Wrong: Enum plus unrelated constraints",
      "description": "When enum is present, additional validation keywords are redundant or contradictory.",
      "after": {
        "enum": [ "one", "two" ]
      },
      "before": {
        "type": "string",
        "enum": [ "one", "two" ],
        "minLength": 3
      }
    },
    {
      "title": "Wrong: Numeric constraints with enum",
      "description": "Minimum/maximum do not add value when enum is present.",
      "after": {
        "enum": [ 1, 2, 3 ]
      },
      "before": {
        "enum": [ 1, 2, 3 ],
        "minimum": 0
      }
    },
    {
      "title": "Right: Pure enum",
      "description": "Enum alone clearly communicates allowed values.",
      "after": {
        "enum": [ 10, 5 ]
      },
      "before": {
        "enum": [ 10, 5 ]
      }
    }
  ],
  "dialects": {
    "2019-09": [
      "enum",
      "type",
      "minimum",
      "maximum",
      "exclusiveMinimum",
      "exclusiveMaximum",
      "multipleOf",
      "minLength",
      "maxLength",
      "pattern",
      "format",
      "minItems",
      "maxItems",
      "uniqueItems",
      "contains",
      "minProperties",
      "maxProperties",
      "required"
    ],
    "2020-12": [
      "enum",
      "type",
      "minimum",
      "maximum",
      "exclusiveMinimum",
      "exclusiveMaximum",
      "multipleOf",
      "minLength",
      "maxLength",
      "pattern",
      "format",
      "minItems",
      "maxItems",
      "uniqueItems",
      "contains",
      "minProperties",
      "maxProperties",
      "required"
    ],
    "draft4": [
      "enum",
      "type",
      "minimum",
      "maximum",
      "exclusiveMinimum",
      "exclusiveMaximum",
      "multipleOf",
      "minLength",
      "maxLength",
      "pattern",
      "minItems",
      "maxItems",
      "uniqueItems",
      "minProperties",
      "maxProperties",
      "required"
    ],
    "draft6": [
      "enum",
      "type",
      "minimum",
      "maximum",
      "exclusiveMinimum",
      "exclusiveMaximum",
      "multipleOf",
      "minLength",
      "maxLength",
      "pattern",
      "format",
      "minItems",
      "maxItems",
      "uniqueItems",
      "minProperties",
      "maxProperties",
      "required"
    ],
    "draft7": [
      "enum",
      "type",
      "minimum",
      "maximum",
      "exclusiveMinimum",
      "exclusiveMaximum",
      "multipleOf",
      "minLength",
      "maxLength",
      "pattern",
      "format",
      "minItems",
      "maxItems",
      "uniqueItems",
      "minProperties",
      "maxProperties",
      "required"
    ]
  },
  "message": "Remove complementary validation keywords when an enum is present.",
  "references": [
    "https://github.com/orgs/json-schema-org/discussions/323#discussioncomment-4898765"
  ]
}
