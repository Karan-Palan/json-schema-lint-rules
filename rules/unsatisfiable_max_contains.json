{
  "title": "`maxContains` less than `minContains` is unsatisfiable",
  "description": "If `maxContains` is present it must be ≥ `minContains` (or ≥ 1 if `minContains` is omitted).",
  "examples": [
    {
      "after": {
        "type": "array",
        "maxContains": 3,
        "minContains": 1,
        "contains": {
          "type": "integer"
        }
      },
      "before": {
        "type": "array",
        "maxContains": 1,
        "minContains": 3,
        "contains": {
          "type": "integer"
        }
      },
      "doc": true
    }
  ],
  "autofixable": false,
  "categories": [ "correctness" ],
  "comprehensiveExamples": [
    {
      "title": "Wrong: maxContains less than minContains",
      "description": "Ensure maxContains ≥ minContains so constraints are satisfiable.",
      "after": {
        "type": "array",
        "maxContains": 3,
        "minContains": 1,
        "contains": {
          "type": "integer"
        }
      },
      "before": {
        "type": "array",
        "maxContains": 1,
        "minContains": 3,
        "contains": {
          "type": "integer"
        }
      }
    },
    {
      "title": "Right: Coherent contains bounds",
      "description": "Bounds that are consistent are valid.",
      "after": {
        "type": "array",
        "maxContains": 3,
        "minContains": 1,
        "contains": {
          "type": "integer"
        }
      },
      "before": {
        "type": "array",
        "maxContains": 3,
        "minContains": 1,
        "contains": {
          "type": "integer"
        }
      }
    }
  ],
  "dialects": {
    "2019-09": [ "minContains", "maxContains" ],
    "2020-12": [ "minContains", "maxContains" ]
  },
  "message": "Increase `maxContains` or lower `minContains`.",
  "references": [
    "https://json-schema.org/draft/2020-12/json-schema-validation.html#name-maxcontains"
  ]
}
