{
  "title": "`$ref` targets must resolve **and** point to a JSON Schema",
  "description": "Every relative JSON Pointer in `$ref` must resolve to a subschema within the same document. If the `$ref` is an absolute / URI reference, it must locate a retrievable **JSON Schema resource** (an object or boolean). Dangling pointers or links to non-schema content are errors.",
  "examples": [
    {
      "after": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/$defs/uuid"
          }
        },
        "$defs": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "before": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/$defs/uuid"
          }
        }
      },
      "doc": true
    },
    {
      "after": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$ref": "#/$defs/User",
        "$defs": {
          "User": {
            "type": "object"
          }
        }
      },
      "before": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$ref": "#/components/schemas/User"
      }
    },
    {
      "after": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$ref": "https://example.com/user-schema.json"
      },
      "before": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$ref": "https://example.com/readme.txt"
      }
    },
    {
      "after": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$ref": "https://example.com/user-schema.json"
      },
      "before": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$ref": "https://example.com/data.json"
      },
      "doc": true
    }
  ],
  "comprehensiveExamples": [
    {
      "title": "Wrong: Missing $defs target",
      "description": "Relative JSON Pointer must resolve within the document.",
      "before": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$ref": "#/$defs/uuid"
      },
      "after": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$ref": "#/$defs/uuid",
        "$defs": { "uuid": { "type": "string", "format": "uuid" } }
      }
    },
    {
      "title": "Wrong: Broken external link",
      "description": "Absolute URI must locate a JSON Schema resource.",
      "before": { "$ref": "https://example.com/readme.txt" },
      "after": { "$ref": "https://example.com/user-schema.json" }
    },
    {
      "title": "Wrong: Points to non-schema JSON",
      "description": "The remote content must be a JSON Schema (object or boolean).",
      "before": { "$ref": "https://example.com/data.json" },
      "after": { "$ref": "https://example.com/user-schema.json" }
    },
    {
      "title": "Right: Resolving to an inlined $defs",
      "description": "A correct in-document ref to a defined subschema.",
      "before": {
        "type": "object",
        "properties": { "id": { "$ref": "#/$defs/id" } },
        "$defs": { "id": { "type": "integer" } }
      },
      "after": {
        "type": "object",
        "properties": { "id": { "$ref": "#/$defs/id" } },
        "$defs": { "id": { "type": "integer" } }
      }
    }
  ],
  "autofixable": false,
  "categories": [ "correctness", "safety" ],
  "dialects": {
    "2019-09": [ "$ref" ],
    "2020-12": [ "$ref" ],
    "draft4": [ "$ref" ],
    "draft6": [ "$ref" ],
    "draft7": [ "$ref" ]
  },
  "message": "Ensure `$ref` resolves to an existing subschema and that the target itself is a valid JSON Schema.",
  "references": [
    "https://json-schema.org/draft/2020-12/json-schema-core.html#rfc.section.8.3",
    "https://json-schema.org/understanding-json-schema/structuring.html#id64"
  ]
}
