{
  "title": "`else:false` branch can be desugared",
  "description": "`if: S, else:false` collapses to just `S` (since the schema is valid only when `S` is true).",
  "examples": [
    {
      "after": {
        "properties": {
          "flag": {
            "const": true
          }
        }
      },
      "before": {
        "if": {
          "properties": {
            "flag": {
              "const": true
            }
          }
        },
        "else": false
      },
      "doc": true
    }
  ],
  "autofixable": true,
  "categories": [ "style" ],
  "comprehensiveExamples": [
    {
      "title": "Wrong: else:false can be simplified",
      "description": "`if: S, else:false` is equivalent to just enforcing S.",
      "after": {
        "properties": {
          "flag": {
            "const": true
          }
        }
      },
      "before": {
        "if": {
          "properties": {
            "flag": {
              "const": true
            }
          }
        },
        "else": false
      }
    },
    {
      "title": "Right: Use if/then instead of else:false",
      "description": "Prefer if/then or a positive schema when possible.",
      "after": {
        "if": {
          "properties": {
            "flag": {
              "const": true
            }
          }
        },
        "then": {
          "required": [ "flag" ]
        }
      },
      "before": {
        "if": {
          "properties": {
            "flag": {
              "const": true
            }
          }
        },
        "then": {
          "required": [ "flag" ]
        }
      }
    }
  ],
  "dialects": {
    "2019-09": [ "if", "then", "else" ],
    "2020-12": [ "if", "then", "else" ],
    "draft7": [ "if", "then", "else" ]
  },
  "message": "Replace `else:false` with its equivalent positive schema.",
  "references": [
    "https://json-schema.org/draft/2020-12/json-schema-core.html#name-conditionals",
    "https://json-schema.org/draft/2020-12/json-schema-core.html#name-boolean-schemas"
  ]
}
