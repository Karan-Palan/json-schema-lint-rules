{
  "title": "`then:false` branch can be desugared",
  "description": "`if: S, then:false` is logically equivalent to `not: S`.",
  "examples": [
    {
      "after": {
        "not": {
          "properties": {
            "flag": {
              "const": true
            }
          }
        }
      },
      "before": {
        "if": {
          "properties": {
            "flag": {
              "const": true
            }
          }
        },
        "then": false
      },
      "doc": true
    }
  ],
  "comprehensiveExamples": [
    {
      "title": "Wrong: then:false can be simplified",
      "description": "`if: S, then:false` equals `not: S`.",
      "before": { "if": { "properties": { "flag": { "const": true } } }, "then": false },
      "after": { "not": { "properties": { "flag": { "const": true } } } }
    },
    {
      "title": "Right: Use explicit not",
      "description": "Using `not` directly communicates the intent clearly.",
      "before": { "not": { "properties": { "flag": { "const": true } } } },
      "after": { "not": { "properties": { "flag": { "const": true } } } }
    }
  ],
  "autofixable": true,
  "categories": [ "style" ],
  "dialects": {
    "2019-09": [ "if", "then", "else", "not" ],
    "2020-12": [ "if", "then", "else", "not" ],
    "draft7": [ "if", "then", "else", "not" ]
  },
  "message": "Replace `then:false` with its equivalent `not` schema.",
  "references": [
    "https://json-schema.org/draft/2020-12/json-schema-core.html#name-conditionals",
    "https://json-schema.org/draft/2020-12/json-schema-core.html#name-boolean-schemas"
  ]
}
