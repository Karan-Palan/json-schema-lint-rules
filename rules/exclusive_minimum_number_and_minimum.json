{
  "title": "Keep only the tighter upper bound (`exclusiveMaximum` vs `maximum`)",
  "description": "When both `maximum` and numeric `exclusiveMaximum` are present, one of them is redundant. Retain the stricter limit and drop the other.",
  "examples": [
    {
      "after": {
        "type": "number",
        "exclusiveMaximum": 5
      },
      "before": {
        "type": "number",
        "exclusiveMaximum": 5,
        "maximum": 6
      },
      "doc": true
    }
  ],
  "comprehensiveExamples": [
    {
      "title": "Wrong: Keep only the stricter lower bound",
      "description": "If both minimum and exclusiveMinimum exist, drop the weaker bound.",
      "before": { "type": "number", "exclusiveMinimum": 10, "minimum": 8 },
      "after": { "type": "number", "exclusiveMinimum": 10 }
    },
    {
      "title": "Right: Single lower bound is clear",
      "description": "Having only exclusiveMinimum is fine and unambiguous.",
      "before": { "type": "number", "exclusiveMinimum": 0 },
      "after": { "type": "number", "exclusiveMinimum": 0 }
    }
  ],
  "autofixable": true,
  "categories": [ "correctness" ],
  "dialects": {
    "2019-09": [ "maximum", "exclusiveMaximum" ],
    "2020-12": [ "maximum", "exclusiveMaximum" ],
    "draft6": [ "maximum", "exclusiveMaximum" ],
    "draft7": [ "maximum", "exclusiveMaximum" ]
  },
  "message": "Drop the looser upper-bound keyword; itâ€™s redundant.",
  "references": [
    "https://json-schema.org/draft/2019-09/json-schema-validation.html#name-exclusivemaximum"
  ]
}
